c-----------------------------------------------------------------------
c
c     Box geometry with periodic boundary conditions.
c
c-----------------------------------------------------------------------
      subroutine userinc(tt,incfhx,incfhy,incfhz,incfex,incfey,incfez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      real tt
      real incfhx(lxzfl),incfhy(lxzfl),incfhz(lxzfl)
      real incfex(lxzfl),incfey(lxzfl),incfez(lxzfl)

      return
      end
c-----------------------------------------------------------------------
      subroutine userini(tt,hx,hy,hz,ex,ey,ez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'

      real tt
      real hx(lpts),hy(lpts),hz(lpts)
      real ex(lpts),ey(lpts),ez(lpts)

      return
      end
c-----------------------------------------------------------------------
      subroutine usersol(tt,solhx,solhy,solhz,solex,soley,solez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      real tt
      real solhx(lpts),solhy(lpts),solhz(lpts)
      real solex(lpts),soley(lpts),solez(lpts)

      return
      end
c-----------------------------------------------------------------------
      subroutine usersrc(tt,srchx,srchy,srchz,srcex,srcey,srcez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      real tt
      real srchx(lpts),srchy(lpts),srchz(lpts)
      real srcex(lpts),srcey(lpts),srcez(lpts)

      return
      end
c-----------------------------------------------------------------------
      subroutine userfsrc(tt,srcfhx,srcfhy,srcfhz,srcfex,srcfey,srcfez)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'

      real tt
      real srcfhx(lxzfl),srcfhy(lxzfl),srcfhz(lxzfl)
      real srcfex(lxzfl),srcfey(lxzfl),srcfez(lxzfl)

      return
      end
c-----------------------------------------------------------------------
      subroutine uservp(ix,iy,iz,iel)
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

c     These don't do anything! This is a temporary measure until
c
c     https://github.com/NekCEM/NekCEM/issues/12
c
c     is resolved.
      integer ix,iy,iz,iel

      integer i

      do i = 1,npts
         permittivity(i) = 1.0
         permeability(i) = 1.0
      enddo

c     Fill the E/H fields with 1.0 and write that to a vtk file.
      do i = 1,npts
         hn(i,1) = 1.0
         hn(i,2) = 1.0
         hn(i,3) = 1.0
         en(i,1) = 1.0
         en(i,2) = 1.0
         en(i,3) = 1.0
      enddo
      call cem_out

c     Now fill the fields with 2.0; if restart is working then when we
c     get to the first `userchk` then everything should still be filled
c     with 1.0.
      do i = 1,npts
         hn(i,1) = 2.0
         hn(i,2) = 2.0
         hn(i,3) = 2.0
         en(i,1) = 2.0
         en(i,2) = 2.0
         en(i,3) = 2.0
      enddo

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
c-----------------------------------------------------------------------
      implicit none

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
c-----------------------------------------------------------------------
      implicit none

      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
c-----------------------------------------------------------------------
      implicit none
      include 'SIZE'
      include 'TOTAL'
      include 'EMWAVE'

      integer i
      real l2(6),linf(6)

      do i = 1,npts
         shn(i,1) = 1.0
         shn(i,2) = 1.0
         shn(i,3) = 1.0
         sen(i,1) = 1.0
         sen(i,2) = 1.0
         sen(i,3) = 1.0
      enddo

      call cem_error(hn(1,1),shn(1,1),errhn(1,1),npts,l2(1),linf(1))
      call cem_error(hn(1,2),shn(1,2),errhn(1,2),npts,l2(2),linf(2))
      call cem_error(hn(1,3),shn(1,3),errhn(1,3),npts,l2(3),linf(3))
      call cem_error(en(1,1),sen(1,1),erren(1,1),npts,l2(4),linf(4))
      call cem_error(en(1,2),sen(1,2),erren(1,2),npts,l2(5),linf(5))
      call cem_error(en(1,3),sen(1,3),erren(1,3),npts,l2(6),linf(6))

      do i = 1,6
         if (l2(i).gt.1e-15) then
            write(*,*) 'ERROR: restart failed'
            call exitt(1)
         elseif (linf(i).gt.1e-15) then
            write(*,*) 'ERROR: restart failed'
            call exitt(1)
         endif
      enddo

      return
      end
c-----------------------------------------------------------------------
