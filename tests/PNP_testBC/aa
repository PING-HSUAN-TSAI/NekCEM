--- ../../src/cem_drift.F	2017-07-14 20:39:49.000000000 -0500
+++ /Users/bigticket0501/NekCEM_misunmin/src/cem_drift.F	2017-07-12 15:54:22.000000000 -0500
@@ -94,9 +94,6 @@
       call rzero (fcPJ ,nxzfl3)
       call rzero (fcEJ ,nxzfl3)
 
-      call rzero (bc_flux,lxzfl*ldimt)
-      call rzero (bc_conv,lxzfl*ldimt)
-
       call rzero (w3mn ,nxyz )
       call rzero (unxm ,nxzfl)
       call rzero (unym ,nxzfl)
@@ -136,7 +133,7 @@
 c...  get global numbering on face and set material properties
       call cem_set_fc_ptr       !global numbering index on face
       call cem_drift_uvp        !set parameters
-      call cem_drift_bcs_fc_ptr !fixme by ying
+      call cem_set_neuman_fc_ptr !fixme by ying
 
 c...  inverse mass matrix including material constants
       call invers2(qbm1,bmn,npts)
@@ -196,34 +193,35 @@
       include 'DRIFT'
       include 'POISSON'
 
-      if     (ifbdf1) then    
+      if (ifbdf1) then    
 
-        call cem_drift_source  
-        call cem_drift_poisson 
-        call cem_drift_sem_bdf1
-        return
+         call cem_drift_source  
+         call cem_drift_poisson 
+         call cem_drift_sem_bdf1
+
+         return
 
       elseif (ifbdf2) then  
 
-        if (istep.eq.1) then
+         if (istep.eq.1) then
 
-          call copy (cN1,cN,npts)  
-          call copy (cP1,cP,npts)
-          call cem_drift_source 
-          call cem_drift_poisson 
-          call cem_drift_sem_bdf1
-          call copy (potent1,potent,npts) 
-          time= time + 0.5*dt
+           call copy (cN1,cN,npts)  
+           call copy (cP1,cP,npts)
+           call cem_drift_source 
+           call cem_drift_poisson 
+           call cem_drift_sem_bdf1
+           call copy (potent1,potent,npts) 
+           time= time + 0.5*dt
 
-        else
+         else
 
-          call cem_drift_source  
-          call cem_drift_poisson 
-          call cem_drift_sem_bdf2
+           call cem_drift_source  
+           call cem_drift_poisson 
+           call cem_drift_sem_bdf2
 
-        endif
+         endif
 
-        return
+         return
 
       endif
 
@@ -239,12 +237,11 @@
       include 'TOTAL'
       include 'DRIFT'
       include 'POISSON'
-      include 'BCS'    
 
       real dummy(lx1*ly1*lz1*lelt)
 
       call usersrc (time,resN,resP,resE,rhs,dummy,dummy)
-
+ 
       return
       end
 c-----------------------------------------------------------------------
@@ -256,15 +253,15 @@
       include 'DRIFT'
       include 'POISSON'
 
-      real wa (lx1*ly1*lz1*lelt)
-      real wb(lx1*ly1*lz1*lelt)
-
       integer icalled
       save icalled
       data icalled/0/
 
+      real wa (lx1*ly1*lz1*lelt)
+      real wb(lx1*ly1*lz1*lelt)
+
       integer isd,imsh,maxit
-      real    tol
+      real    glamin,tol
 
 c...  setup helmholtz: [h1 A + h2 B] u = rhs where u = u_0+u_b
       if (icalled.eq.0) then
@@ -274,27 +271,30 @@
         icalled = 1
       endif
 
+c...  setup helmholtz: [h1 A + h2 B] u_0 = rhs - h1 A u_b
+      if (ifpec.and.ifinhom) then
+        call axhelm3 (wa,potent_b,h1,h2,1,1) 
+        call sub3 (wb,rhs,wa,npts) ! wb = rhs-wa       
+      else
+        call copy (wb,rhs,npts)    ! wb = rhs       
+      endif
+
       isd = 1
       imsh = 1
       maxit = 5000
       tol = param(22)
 
-c...  setup helmholtz: [h1 A + h2 B] u_0 = rhs - h1 A u_b
-      call bcneusc (wa,npts,1,-1)    
-      call add2 (h2,wa,npts)
-      call bcdirsc (potent,npts,1)    
-      call axhelm3 (wa,potent,h1,h2,1,1) 
-      call sub3 (wb,rhs,wa,npts) ! wb = rhs-wa       
-      call bcneusc (wa,npts,1,1)    
-      call add2 (wb,wa,npts) 
-
 c...  solve u_0 after assemble and mask for boundary on right hand side  
       call dssum (wb,nx1,ny1,nz1)
       call col2 (wb,mask,npts)
       call cggo2 (wa,wb,h1,h2,mult,mask,imsh,isd,npts,tol,maxit)
 
 c...  add u = u_0 + u_b (u_0= potent, u_b=potent_b if applicable)  
-      call add2(potent,wa,npts)
+      if (ifpec.and.ifinhom) then
+         call add3(potent,potent_b,wa,npts)
+      else 
+         call copy(potent,wa,npts)
+      endif
 
 c...  Compute electric fields cEE=-\grad (potent)
       call cem_drift_grad(cee(1,1),cee(1,2),cee(1,3),potent)
@@ -383,7 +383,7 @@
       include 'BCS'
 
       integer  i,j,i0,isd,imsh,maxit
-      real     wk1(lpts),wk2(lpts), tol,glamax
+      real     wk1(lpts),wk2(lpts), tol,glamax,tmp
       real     diff_n_dt(lpts), diff_p_dt(lpts),diff_e_dt(lpts)
       real     dtbdi_n(lpts), dtbdi_p(lpts),dtbdi_e(lpts)
       integer  icalled
@@ -418,35 +418,49 @@
 
       call cem_drift_rhs_bdf1
 
+
+
+      
 c...  solve cn
 
-      call bcneusc (wa,npts,2,-1)
-      call add2 (h2n,wa,npts)
-      call bcdirsc (cn,npts,1)
-      call axhelm3 (wa,cn,h1n,h2n,1,1)
-      call sub3 (wb,resN,wa,npts) 
-      call bcneusc (wa,npts,2,1)
-      call add2 (wb,wa,npts) 
+      if (ifpec.and.ifinhom) then
+        call axhelm3 (wa,cn_b,h1n,h2n,1,1)
+        call sub3 (wb,resN,wa,npts) ! wb = resN-wa
+      else
+        call copy (wb,resN,npts)    ! wb = rhs
+      endif
 
       call dssum (wb,nx1,ny1,nz1)
       call col2 (wb,dmask(1,2),npts)
-      call cggo2(wa,wb,h1n,h2n,mult,dmask(1,2),imsh,isd,npts,tol,maxit)
-      call add2 (cn,wa,npts)
+      call cggo2(wa,wb,h1n,h2n,mult,dmask(1,2),
+     $   imsh,isd,npts,tol,maxit)
+
+      if (ifpec.and.ifinhom) then
+        call add3 (cn,cn_b,wa,npts)
+      else
+        call copy (cn,wa,npts)      ! wb = rhs
+      endif
 
 c...  solve cp
 
-      call bcneusc (wa,npts,3,-1)       
-      call add2 (h2p,wa,npts)
-      call bcdirsc (cp,npts,1)
-      call axhelm3 (wa,cp,h1p,h2p,1,1)
-      call sub3 (wb,resP,wa,npts)
-      call bcneusc (wa,npts,3,1)
-      call add2 (wb,wa,npts)        
+      if (ifpec.and.ifinhom) then
+        call axhelm3 (wa,cp_b,h1p,h2p,1,1)
+        call sub3 (wb,resP,wa,npts) ! wb = resP-wa
+      else
+        call copy (wb,resP,npts)    ! wb = resP
+      endif
 
       call dssum (wb,nx1,ny1,nz1)
       call col2 (wb,dmask(1,3),npts)
-      call cggo2(wa,wb,h1p,h2p,mult,dmask(1,3),imsh,isd,npts,tol,maxit)
-      call add2(cp,wa,npts)
+
+      call cggo2(wa,wb,h1p,h2p,mult,dmask(1,3),
+     $   imsh,isd,npts,tol,maxit)
+
+      if (ifpec.and.ifinhom) then
+        call add3(cp,cp_b,wa,npts)
+      else
+        call copy(cp,wa,npts)
+      endif
 
       return
       end
@@ -464,6 +478,7 @@
 
       call col3 (wn,cn,bm1,npts)
       call col3 (wp,cp,bm1,npts)
+      if (nid .eq. 0 ) write(6,*)'1 dt_rhs=',dt
       call add2s1 (resN,wn,dt,npts) ! resN=cN+dt*(resN) with weights
       call add2s1 (resP,wp,dt,npts) ! resP=cP+dt*(resP) with weights
 
@@ -478,9 +493,10 @@
       call axhelm3(wn,potent,w_h1n,h2,1,1)
       call axhelm3(wp,potent,w_h1p,h2,1,1)
 
+      if (nid .eq. 0 ) write(6,*)'2 dt_rhs=',dt
       call add2s2 (resN,wn, 1.0*dt,npts)
       call add2s2 (resP,wp,-1.0*dt,npts)
-
+           
       return
       end
 c---------------------------------------------------------------------
@@ -1593,7 +1609,7 @@
       return
       end
 c-----------------------------------------------------------------------
-      subroutine cem_drift_bcs_fc_ptr
+      subroutine cem_set_neuman_fc_ptr
 c-----------------------------------------------------------------------
       implicit none
       include 'SIZE'
@@ -1622,7 +1638,7 @@
             cemface_pec(l2,ifld)= i
          elseif  (CB.eq.'R  ') then
             l3= l3+1
-            cemface_rob(l3,ifld)= i
+            cemface_r  (l3,ifld)= i
          endif
       enddo
       enddo
@@ -1630,17 +1646,9 @@
 
       ncemface_nmn(ifld)  = l1
       ncemface_pec(ifld)  = l2
-      ncemface_rob(ifld)  = l3
+      ncemface_r  (ifld)  = l3
       enddo
 
-      if (nid.eq.0) then
-        do ifld=i0,i1    
-         write(6,*) 'rhs_pec: BCs ncemface_pec',ifld,ncemface_pec(ifld)
-         write(6,*) 'rhs_nmn: BCs ncemface_nmn',ifld,ncemface_nmn(ifld)
-         write(6,*) 'rhs_rob: BCs ncemface_rob',ifld,ncemface_rob(ifld)
-        enddo
-      endif
-
       return
       end
 c-----------------------------------------------------------------------
@@ -1681,7 +1689,7 @@
       return
       end
 c-----------------------------------------------------------------------
-      subroutine cem_drift_bd_rob  (bdin,bdout,ifld)
+      subroutine cem_drift_bd_r  (bdin,bdout,ifld)
 c-----------------------------------------------------------------------
       implicit none
       include 'SIZE'
@@ -1690,8 +1698,8 @@
       real    bdin(1),bdout(1)
       integer ifld,i,i0,j
 
-      do i=1,ncemface_rob (ifld)
-         j =cemface_rob (i,ifld)
+      do i=1,ncemface_r (ifld)
+         j =cemface_r  (i,ifld)
          i0=cemface(j)
          bdout(i0)=bdout(i0)+bdin(i)*aream(j)
       enddo
@@ -2013,8 +2021,9 @@
       include 'SIZE'
       include 'TOTAL'
       include 'DRIFT'
+      include 'EMWAVE'
       include 'POISSON'
-
+      
       real energy_density(npts),energy
       integer i,j,k
       real dummy1(npts),dummy2(npts),dummy3(npts)
@@ -2030,10 +2039,10 @@
       call copy(dummy1,cN,npts)
       call copy(dummy2,cP,npts)
       call copy(dummy3,cP,npts)
-
+      
       call add2s2(dummy3,cN,-1.0,npts)
       call add2s2(dummy3,ni, 1.0,npts)
-
+      
       call col2(dummy3,potent,npts)
       call col2(dummy1,LOG(cN),npts)
       call col2(dummy2,LOG(cP),npts)
@@ -2048,82 +2057,17 @@
       if (nid.eq.0) then
          write(*,*)'energy',time,energy
       endif
+c      if (nid.eq.0) then
+c         inquire(file="energy.txt", exist=lexist)
+c         if (lexist) then
+c            open(12, file="energy.txt", status="old",
+c     $           position="append", action="write")
+c            write(12,*)time,energy
+c         else
+c            open(12, file="energy.txt", status="new", action="write")
+c            write(12,*)time,energy
+c         endif
+c       endif
 
-      return
-      end
-c-----------------------------------------------------------------------
-      subroutine bcdirsc (wa,n,ifld)
-c-----------------------------------------------------------------------
-      include 'SIZE'
-      include 'TOTAL'
-      include 'DRIFT'
-      include 'POISSON'
-      include 'BCS'   
-
-      integer n,ifld,itype
-      real wa(n)
-      real wtmp(lx1*ly1*lz1*lelt)
-
-c.... fixme: 6/28/17 misun, this is inactive yet
-
-      call rzero(wtmp,n)
-
-      if (ncemface_pec(ifld).gt.0) then
-c       do i = 1,ncemface_pec(ifld)
-c         j = cemface_pec(i,ifld)
-c         k = cemface(j)
-c         wtmp(k) = wtmp(k) + wa(k,1,1,1)*bm1(k,1,1,1)
-c       enddo
-c       call col2(wa,dmask(1,ifld),n)
-c       call add2(wa,wtmp,n)                
-      endif
-
-      return
-      end
-c-----------------------------------------------------------------------
-      subroutine bcneusc (wa,n,ifld,itype) 
-c-----------------------------------------------------------------------
-      include 'SIZE'
-      include 'TOTAL'
-      include 'DRIFT'
-      include 'POISSON'
-      include 'BCS'    
-
-      integer n,ifld,itype
-      real wa(n)
-
-      call rzero(wa,n)
-
-      if (itype.eq.-1) then
-
-        if (ncemface_rob(ifld).gt.0) then
-          do i = 1,ncemface_rob(ifld)
-            j = cemface_rob(i,ifld)
-            k = cemface(j)
-            wa(k) = wa(k) + bc_conv(i,ifld)*area(j,1,1,1)/bm1(k,1,1,1)
-          enddo
-        endif
-
-      else
-
-        if (ncemface_rob(ifld).gt.0) then
-          do i = 1,ncemface_rob(ifld)
-            j = cemface_rob(i,ifld)
-            k = cemface(j)
-            wa(k) = wa(k) + bc_flux(i,ifld)*area(j,1,1,1)
-          enddo
-        endif
-
-        if (ncemface_nmn(ifld).gt.0) then
-          do i = 1,ncemface_nmn(ifld)
-            j = cemface_nmn(i,ifld)
-            k = cemface(j)
-            wa(k) = wa(k) + bc_flux(i,ifld)*area(j,1,1,1)
-          enddo
-        endif
-
-      endif
-      
-      return
-      end
-c-----------------------------------------------------------------------
+       return
+       end
